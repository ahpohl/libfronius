name: Publish Packages (amd64 + arm64)

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-package:
    strategy:
      matrix:
        include:
          - arch: amd64
            runner: ubuntu-24.04
            deb_arch: amd64
          - arch: arm64
            runner: ubuntu-24.04-arm
            deb_arch: arm64
    runs-on: ${{ matrix.runner }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake pkg-config libmodbus-dev

      - name: Configure CMake
        run: |
          cmake -S . -B build \
            -DCMAKE_BUILD_TYPE=RelWithDebInfo \
            -DCPACK_DEBIAN_PACKAGE_ARCHITECTURE=${{ matrix.deb_arch }}

      - name: Build
        run: cmake --build build --config Release --parallel

      - name: Package
        run: |
          set -euo pipefail
          cd build
          cpack

      - name: Collect artifacts
        shell: bash
        run: |
          set -euo pipefail
          shopt -s nullglob
          mkdir -p dist

          # Copy CPack outputs as-is
          for f in build/*.tar.gz build/*.deb; do
            [ -e "$f" ] || continue
            cp "$f" dist/
          done

          echo "Packaged files:"
          ls -l dist || true

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: "packages-linux-${{ matrix.arch }}"
          path: dist/*
          if-no-files-found: error

  release:
    runs-on: ubuntu-latest
    needs: build-and-package
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Display downloaded files
        run: |
          echo "Files to release:"
          find dist -type f -maxdepth 2 -print

      - name: Create GitHub Release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
